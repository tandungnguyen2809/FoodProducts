@model IEnumerable<FoodProduct>

@{
    ViewData["Title"] = "Product";
}

<div class="container">
    <h1 class="text-center">List Products</h1>

    <div class="form-inline mb-4">
        <div class="d-flex mb-4">
            <input type="text" id="search" class="form-control mr-2" placeholder="Search" />
            <button class="btn btn-primary" onclick="searchProducts()">Search</button>
        </div>
        <button class="btn btn-success ml-2" onclick="showCreateForm()">Create Product</button>
    </div>


    <!-- Products table -->
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Category</th>
                <th>Price</th>
                <th>Description</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="productList">
            @if (Model != null && Model.Any())
            {
                foreach (var product in Model)
                {
                    <tr>
                        <td>@product.ProductName</td>
                        <td>@product.Category</td>
                        <td>@product.Price</td>
                        <td>@product.Description</td>
                        <td>
                            <button class="btn btn-warning" onclick="editProduct(@product.ProductId)">Edit</button>
                            <button class="btn btn-danger" onclick="deleteProduct(@product.ProductId)">Delete</button>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr>
                    <td colspan="5" class="text-center">No products available</td>
                </tr>
            }
        </tbody>
    </table>

    <!-- Product modal for create/edit -->
    <div class="modal" id="productModal">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="modalTitle">Create</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <div class="modal-body">
                    <form id="productForm">
                        <input type="hidden" id="ProductID" />
                        <div class="form-group">
                            <label for="ProductName">Product Name</label>
                            <input type="text" class="form-control" id="ProductName" required />
                        </div>
                        <div class="form-group">
                            <label for="Category">Category</label>
                            <input type="text" class="form-control" id="Category" required />
                        </div>
                        <div class="form-group">
                            <label for="Price">Price</label>
                            <input type="number" class="form-control" id="Price" required />
                        </div>
                        <div class="form-group">
                            <label for="Description">Description</label>
                            <textarea class="form-control" id="Description"></textarea>
                        </div>
                    </form>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-primary" onclick="saveProduct()">Save</button>
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- AJAX and JavaScript code for handling products -->
@section Scripts {
    <script>
        function searchProducts() {
            var searchTerm = $('#search').val();
            $.ajax({
                url: '/Products/Search',
                type: 'GET',
                data: { search: searchTerm },
                success: function (data) {
                    $('#productList').html(data);
                },
                error: function () {
                    alert('An error occurred while searching for products.');
                }
            });
        }

        function showCreateForm() {
            $('#modalTitle').text('Create Product');
            $('#ProductID').val('');
            $('#ProductName').val('');
            $('#Category').val('');
            $('#Price').val('');
            $('#Description').val('');
            $('#productModal').modal('show');
        }

        function saveProduct() {
            var productName = $('#ProductName').val();
            var category = $('#Category').val();
            var price = $('#Price').val();

            // Validate fields before submitting
            if (!productName || !category || !price) {
                alert('Please fill in all required fields.');
                return;
            }

            var product = {
                ProductID: $('#ProductID').val(),
                ProductName: productName,
                Category: category,
                Price: price,
                Description: $('#Description').val()
            };

            var url = product.ProductID ? '/Products/Edit/' + product.ProductID : '/Products/Create';

            $.ajax({
                url: url,
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify(product),
                success: function () {
                    $('#productModal').modal('hide');
                    location.reload();
                },
                error: function () {
                    alert('An error occurred while saving the product.');
                }
            });
        }

        function editProduct(id) {
            $.ajax({
                url: '/Products/Details/' + id,
                type: 'GET',
                success: function (data) {
                    $('#modalTitle').text('Edit Product');
                    $('#ProductID').val(data.ProductID);
                    $('#ProductName').val(data.ProductName);
                    $('#Category').val(data.Category);
                    $('#Price').val(data.Price);
                    $('#Description').val(data.Description);
                    $('#productModal').modal('show');
                },
                error: function () {
                    alert('An error occurred while loading the product details.');
                }
            });
        }

        function deleteProduct(id) {
            if (confirm('Are you sure you want to delete this product?')) {
                $.ajax({
                    url: '/Products/Delete/' + id,
                    type: 'POST',
                    success: function () {
                        location.reload();
                    },
                    error: function () {
                        alert('An error occurred while deleting the product.');
                    }
                });
            }
        }
    </script>
} 